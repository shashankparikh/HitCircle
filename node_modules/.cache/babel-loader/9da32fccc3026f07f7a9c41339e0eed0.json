{"ast":null,"code":"var _jsxFileName = \"/Users/shashankparikh/Desktop/HitTheCircle/src/Epics/Pages/Score/score.js\";\nimport React, { Component } from 'react';\nimport { CircularComponent, Container, ButtonContainer, MainContainer } from './style';\nimport { Input, Button, Modal } from 'antd';\nimport { dummyArray } from './config';\nexport default class score extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataArray: [],\n      randomColor: 'red',\n      numberGenerated: 0,\n      scoreCount: 0,\n      visible: false\n    };\n\n    this.getData = () => {\n      const data = dummyArray.slice(0);\n      this.setState({\n        dataArray: data\n      });\n    };\n\n    this.changeColor = () => {\n      const randomNumber = Math.floor(Math.random() * 23) + 1;\n      this.setState({\n        numberGenerated: randomNumber\n      });\n      let NewdataArray = JSON.parse(JSON.stringify(dummyArray));\n      NewdataArray.forEach(function (item, index, theArray) {\n        if (item.key == randomNumber) {\n          theArray[index].class = 'red';\n        }\n      });\n      this.setState({\n        dataArray: NewdataArray\n      });\n    };\n\n    this.selectedDisc = (e, item) => {\n      e.preventDefault();\n\n      if (this.state.numberGenerated == item.key) {\n        this.setState({\n          scoreCount: this.state.scoreCount + 1\n        });\n      } else {\n        this.setState({\n          scoreCount: this.state.scoreCount - 1\n        });\n      }\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleCancel = e => {\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const scoreCount = this.state.scoreCount;\n    return React.createElement(MainContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Score\",\n      value: scoreCount,\n      style: {\n        width: '20%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.dataArray.map(item => {\n      return React.createElement(CircularComponent, {\n        color: item.class,\n        id: item.key,\n        key: item.key,\n        className: item.class,\n        onClick: e => this.selectedDisc(e, item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    })), React.createElement(ButtonContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.changeColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Play\"), React.createElement(Button, {\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Stop\")), React.createElement(Modal, {\n      visible: this.state.visible,\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Your Final score is \", scoreCount, \". \")));\n  }\n\n}","map":{"version":3,"sources":["/Users/shashankparikh/Desktop/HitTheCircle/src/Epics/Pages/Score/score.js"],"names":["React","Component","CircularComponent","Container","ButtonContainer","MainContainer","Input","Button","Modal","dummyArray","score","state","dataArray","randomColor","numberGenerated","scoreCount","visible","getData","data","slice","setState","changeColor","randomNumber","Math","floor","random","NewdataArray","JSON","parse","stringify","forEach","item","index","theArray","key","class","selectedDisc","e","preventDefault","handleOk","showModal","handleCancel","componentDidMount","render","width","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { CircularComponent, Container,ButtonContainer,MainContainer } from './style'\nimport { Input, Button, Modal } from 'antd'\nimport { dummyArray } from './config'\n\nexport default class score extends Component {\n  state = {\n    dataArray: [],\n    randomColor: 'red',\n    numberGenerated: 0,\n    scoreCount: 0,\n    visible: false\n  }\n\n  componentDidMount () {\n      this.getData();\n   \n  }\n\n  getData =()=>{\n      const data = dummyArray.slice(0)\n    this.setState({ dataArray: data })\n  }\n\n  changeColor = () => {\n    const randomNumber = Math.floor(Math.random() * 23) + 1\n    this.setState({ numberGenerated: randomNumber })\n\n    let NewdataArray = JSON.parse(JSON.stringify(dummyArray))\n\n    NewdataArray.forEach(function (item, index, theArray) {\n      if (item.key == randomNumber) {\n        theArray[index].class = 'red'\n      }\n    })\n    this.setState({ dataArray: NewdataArray })\n  }\n\n  selectedDisc = (e, item) => {\n    e.preventDefault()\n    if (this.state.numberGenerated == item.key) {\n      this.setState({ scoreCount: this.state.scoreCount + 1 })\n    } else {\n      this.setState({ scoreCount: this.state.scoreCount - 1 })\n    }\n  }\n\n  handleOk = () => {\n    this.setState({\n      visible: false\n    })\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    })\n  }\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    })\n  }\n  render () {\n    const { scoreCount } = this.state\n\n    return (\n      <MainContainer>\n        <Input\n          placeholder='Score'\n          value={scoreCount}\n          style={{ width: '20%' }}\n        />\n        <Container>\n          {this.state.dataArray.map(item => {\n            return (\n              <CircularComponent\n                color={item.class}\n                id={item.key}\n                key={item.key}\n                className={item.class}\n                onClick={e => this.selectedDisc(e, item)}\n              />\n            )\n          })}\n        </Container>\n        <ButtonContainer>\n        <Button onClick={this.changeColor}>Play</Button>\n        <Button onClick={this.showModal}>Stop</Button>\n        </ButtonContainer>\n        <Modal\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <p>Your Final score is {scoreCount}. </p>\n        </Modal>\n      </MainContainer>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}